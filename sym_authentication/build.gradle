plugins {
    id 'org.springframework.boot' version '2.3.12.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.sonarqube'
    id 'java'
}

description = 'Symbiosis Authentication'

sonarqube {
    properties {
        property "sonar.projectKey", "tkaviya_smartswitch"
        property "sonar.organization", "tkaviya"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

jar { archivesBaseName = 'authentication' }

apply plugin: 'war'
apply plugin: 'idea'

configurations {
    provided
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
}

idea { module { scopes.PROVIDED.plus += [ configurations.provided] } }

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${project.spring_cloud_version}"
    }
}

dependencies {

    compileOnly libraries.lombok
    annotationProcessor libraries.lombok

    implementation project(':sym_core_lib')
    implementation project(':sym_persistence')
    implementation project(':sym_common')

    testImplementation project(':sym_core_lib').sourceSets.test.output
    testImplementation project(':sym_persistence').sourceSets.test.output
    testImplementation project(':sym_common').sourceSets.test.output

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.boot:spring-boot-starter-web' // use tomcat
	implementation ('org.springframework.boot:spring-boot-starter-web') { // use wildfly
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client' //use tomcat
    implementation ('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client') { // use wildfly
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    compile 'org.springframework.boot:spring-boot-starter-aop'
//    compile 'org.springframework.boot:spring-boot-starter-hateoas'
//    compile 'org.springframework.boot:spring-boot-starter-data-rest'
//    compile 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'javax.servlet:javax.servlet-api'
    implementation 'mysql:mysql-connector-java'

    implementation libraries.jjwt
    implementation libraries.modelmapper
    implementation libraries.swagger2
    implementation libraries.swagger_ui
//    implementation libraries.google_api_client
//    implementation libraries.mitre_id

    testImplementation libraries.testng
    testImplementation libraries.jmockit
    testImplementation libraries.spring_test
    testCompileOnly libraries.lombok
    testAnnotationProcessor libraries.lombok

}